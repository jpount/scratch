# Development Profile Configuration - Uses PostgreSQL with Docker Compose
spring.application.name=ttserver-dev

# Database Configuration - connects to Docker PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
spring.datasource.username=myuser
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true

# Liquibase Configuration
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true
spring.liquibase.drop-first=false

# Docker Compose Configuration - only for Spring Boot run
spring.docker.compose.enabled=true
spring.docker.compose.file=docker-compose.yaml
spring.docker.compose.lifecycle-management=start_and_stop
spring.docker.compose.start.command=up
spring.docker.compose.stop.command=down
spring.docker.compose.stop.timeout=10s

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Enable DevTools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# Artemis Configuration for dev
spring.artemis.broker-url=tcp://localhost:61616
spring.artemis.user=artemis
spring.artemis.password=artemis
spring.artemis.mode=native